5.3 勞作時間，使用hex editor將uboot、firmware、art資料弄成一整個16MB的編程器固件影像檔

工作列表：
     5.3.1 動手之前再一次複習編程器固件的分割區布局
     5.3.2 將所有素材檔案集中在同一個目錄，並產生一個16MB的空白的empty.bin
     5.3.3 使用Bless Hex Editor將uboot、OpenWRT firmware、art資料貼入empty.bin
     5.3.4 其實也可以不用Hex Editor，在終端機下使用cat指令產生編程器固件

細節
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
5.3.1 動手之前再一次複習編程器固件的分割區布局

TP-Link原廠的4M編程器固件
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－－－－－－－十－－－－－十
｜　　　６４ｋ　　　　｜　　　６４ｋ　　　　｜　　　　　　　　　　　　　　　　　　　　　　　　｜　６４ｋ　｜
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－－－－－－－十－－－－－十
｜（原廠ｕ－ｂｏｏｔ）｜（此路由器獨有資料）｜　　（ＴＰ－Ｌｉｎｋ原廠的ｆｉｒｍｗａｒｅ）　　｜（ａｒｔ）｜
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－－－－－－－十－－－－－十


我們要產生的16M編程器固件
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－十－－－－－十－－－－－十
｜　　　６４ｋ　　　　｜　　　６４ｋ　　　　｜　　　　　　１６１２８ｋ　　　　　　｜　６４ｋ　｜　６４ｋ　｜
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－十－－－－－十－－－－－十
｜（不死ｕ－ｂｏｏｔ）｜（此路由器獨有資料）｜（ＯｐｅｎＷＲＴ的ｆｉｒｍｗａｒｅ）｜補０ｘｆｆ｜（ａｒｔ）｜
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－十－－－－－十－－－－－十

稍早前在步驟
3.3 ssh連線到路由器，備份u-boot和art資料到筆記型電腦上
我們執行了
root@OpenWrt:~# cat /proc/mtd 
dev:    size   erasesize  name
mtd0: 00020000 00010000 "u-boot"
mtd1: 0010e660 00010000 "kernel"
mtd2: 002c19a0 00010000 "rootfs"
mtd3: 000b0000 00010000 "rootfs_data"
mtd4: 00010000 00010000 "art"
mtd5: 003d0000 00010000 "firmware"
root@OpenWrt:~# cd /tmp
root@OpenWrt:/tmp# dd if=/dev/mtd0 of=uboot_bak.bin
256+0 records in
256+0 records out
root@OpenWrt:/tmp# dd if=/dev/mtd4 of=art_bak.bin
128+0 records in
128+0 records out
root@OpenWrt:/tmp# ls -al|grep bin
-rw-r--r--    1 root     root         65536 Oct  1 12:50 art_bak.bin
-rw-r--r--    1 root     root        131072 Oct  1 12:49 uboot_bak.bin
root@OpenWrt:/tmp# exit
Connection to 192.168.1.1 closed.
anntony@anntony-Lenovo-B590 ~ $ 

這一段指令
把uboot和art資料備份到筆記型電腦上了
注意
那個時候備份下來的
uboot_bak.bin
它的大小有128 KBytes
它其實是上面我畫的
TP-Link原廠的4M編程器固件布局圖的最前面128 KBytes的部分
看到我畫的第二個圖
那是我們即將要產生的用來燒錄的16MB編程器固件影像檔
第一個64 KB的部分，要換成pepe2k的不死uboot，已經在步驟5.2裡編譯完成
第二個64 KB的部分，保留TP-Link原廠舊資料，這個64K裡面有Mac Address和WPS PIN等重要資訊，已經在步驟3.3備份下來
第三個16128 KB的部分，是從trunk分支的代碼編譯好的OpenWRT固件，已經在步驟5.3裡編譯完成
第四個64 KB的部分，因為要湊齊16MB = 16384 KB，所以要補上這64 KB的0xFF
第五個64 KB的部分，是art分割區的資料，沒有它的話，路由器會失去無線功能，已經在步驟3.3備份下來

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
5.3.2 將所有素材檔案集中在同一個目錄，並產生一個16MB的空白的empty.bin

anntony@anntony-Lenovo-B590 ~ $ mkdir wr841n_workingdir
anntony@anntony-Lenovo-B590 ~ $ cd wr841n_workingdir/
anntony@anntony-Lenovo-B590 ~/wr841n_workingdir $ cp /home/anntony/wr841n_backup/uboot_bak.bin .
anntony@anntony-Lenovo-B590 ~/wr841n_workingdir $ cp /home/anntony/wr841n_backup/art_bak.bin .
anntony@anntony-Lenovo-B590 ~/wr841n_workingdir $ cp /home/anntony/openwrt/trunk/bin/ar71xx/openwrt-ar71xx-generic-tl-wr841n-v8-squashfs-factory.bin .
anntony@anntony-Lenovo-B590 ~/wr841n_workingdir $ cp /home/anntony/u-boot_mod/bin/uboot_for_tp-link_tl-wr841n_v8.bin .
anntony@anntony-Lenovo-B590 ~/wr841n_workingdir $ dd if=/dev/zero ibs=1M count=16 | tr "\000" "\377" > empty.bin
輸入 16+0 個紀錄
輸出 32768+0 個紀錄
複製了 16777216 個位元組 (17 MB), 0.0534389 s, 314 MB/s
anntony@anntony-Lenovo-B590 ~/wr841n_workingdir $ ls -al
總計 32776
drwxr-xr-x  2 anntony anntony     4096  2月 27 22:27 .
drwxr-xr-x 70 anntony anntony     4096  2月 27 22:26 ..
-rw-r--r--  1 anntony anntony    65536  2月 27 22:26 art_bak.bin
-rw-r--r--  1 anntony anntony 16777216  2月 27 22:27 empty.bin
-rw-r--r--  1 anntony anntony 16515072  2月 27 22:27 openwrt-ar71xx-generic-tl-wr841n-v8-squashfs-factory.bin
-rw-r--r--  1 anntony anntony   131072  2月 27 22:26 uboot_bak.bin
-rw-r--r--  1 anntony anntony    65536  2月 27 22:27 uboot_for_tp-link_tl-wr841n_v8.bin
anntony@anntony-Lenovo-B590 ~/wr841n_workingdir $

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
5.3.3 使用Bless Hex Editor將uboot、OpenWRT firmware、art資料貼入empty.bin

打開Bless Hex Editor之後
先打開empty.bin
我們用它來打底

打開uboot_bak.bin
執行選單的[ Edit ] > [ Select All ]
把它全選，然後[ Edit ] > [ 複製 ]

回到empty.bin
執行選單的[ Search ] > [ Goto Offset ]
在畫面中間的地方的Offset填入0x0
按下右邊的 [ Go to Offset ] 按鈕
到empty.bin的最前面的Offset
在貼上之前，先按一下鍵盤上的Insert按鈕
這個時候在Bless Hex Editor右下角的Ins會切換成OVR
這個時候已經切換成覆蓋模式
再執行選單的 [ Edit ] > [ 貼上 ]
再執行選單的 [ File ] > [ 儲存 ]

再打開
uboot_for_tp-link_tl-wr841n_v8.bin
執行選單的[ Edit ] > [ Select All ]
把它全選，然後[ Edit ] > [ 複製 ]

回到empty.bin
執行選單的[ Search ] > [ Goto Offset ]
在畫面中間的地方的Offset填入0x0
按下右邊的 [ Go to Offset ] 按鈕
到empty.bin的最前面的Offset
看一下Bless Hex Editor右下角
確定它還是在OVR覆寫模式
再執行選單的 [ Edit ] > [ 貼上 ]
再執行選單的 [ File ] > [ 儲存 ]

再打開
openwrt-ar71xx-generic-tl-wr841n-v8-squashfs-factory.bin
執行選單的[ Edit ] > [ Select All ]
把它全選，然後[ Edit ] > [ 複製 ]

回到empty.bin
執行選單的[ Search ] > [ Goto Offset ]
在畫面中間的地方的Offset填入0x20000
為什麼是0x20000
這是編程器固件的第128KB開始的地方
128 KBytes = 128 X 1024 Bytes = 131072 Bytes（十進位） = 0x20000 （十六進位）
到empty.bin的Offset是0x20000的地方
看一下Bless Hex Editor右下角
確定它還是在OVR覆寫模式
再執行選單的 [ Edit ] > [ 貼上 ]
再執行選單的 [ File ] > [ 儲存 ]

再打開
art_bak.bin
執行選單的[ Edit ] > [ Select All ]
把它全選，然後[ Edit ] > [ 複製 ]

回到empty.bin
執行選單的[ Search ] > [ Goto Offset ]
在畫面中間的地方的Offset填入0xFEFFFF
看一下Bless Hex Editor右下角
確定它還是在OVR覆寫模式
再執行選單的 [ Edit ] > [ 貼上 ]
再執行選單的 [ File ] > [ 儲存 ]

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

