5.3 勞作時間，使用hex editor將uboot、firmware、art資料弄成一整個16MB的編程器固件影像檔

工作列表：
     5.3.1 動手之前再一次複習編程器固件的分割區布局
     5.3.2 將所有素材檔案集中在同一個目錄，並產生一個16MB的空白的empty.bin
     5.3.3 使用Bless Hex Editor將uboot、OpenWRT firmware、art資料貼入empty.bin
     5.3.4 其實也可以不用Hex Editor，在終端機下使用cat指令產生編程器固件

細節
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
5.3.1 動手之前再一次複習編程器固件的分割區布局

TP-Link原廠的4M編程器固件
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－－－－－－－十－－－－－十
｜　　　６４ｋ　　　　｜　　　６４ｋ　　　　｜　　　　　　　　　　　　　　　　　　　　　　　　｜　６４ｋ　｜
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－－－－－－－十－－－－－十
｜（原廠ｕ－ｂｏｏｔ）｜（此路由器獨有資料）｜　　（ＴＰ－Ｌｉｎｋ原廠的ｆｉｒｍｗａｒｅ）　　｜（ａｒｔ）｜
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－－－－－－－十－－－－－十


我們要產生的16M編程器固件
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－十－－－－－十－－－－－十
｜　　　６４ｋ　　　　｜　　　６４ｋ　　　　｜　　　　　　１６１２８ｋ　　　　　　｜　６４ｋ　｜　６４ｋ　｜
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－十－－－－－十－－－－－十
｜（不死ｕ－ｂｏｏｔ）｜（此路由器獨有資料）｜（ＯｐｅｎＷＲＴ的ｆｉｒｍｗａｒｅ）｜補０ｘｆｆ｜（ａｒｔ）｜
十－－－－－－－－－－十－－－－－－－－－－十－－－－－－－－－－－－－－－－－－十－－－－－十－－－－－十

稍早前在步驟
3.3 ssh連線到路由器，備份u-boot和art資料到筆記型電腦上
我們執行了
root@OpenWrt:~# cat /proc/mtd 
dev:    size   erasesize  name
mtd0: 00020000 00010000 "u-boot"
mtd1: 0010e660 00010000 "kernel"
mtd2: 002c19a0 00010000 "rootfs"
mtd3: 000b0000 00010000 "rootfs_data"
mtd4: 00010000 00010000 "art"
mtd5: 003d0000 00010000 "firmware"
root@OpenWrt:~# cd /tmp
root@OpenWrt:/tmp# dd if=/dev/mtd0 of=uboot_bak.bin
256+0 records in
256+0 records out
root@OpenWrt:/tmp# dd if=/dev/mtd4 of=art_bak.bin
128+0 records in
128+0 records out
root@OpenWrt:/tmp# ls -al|grep bin
-rw-r--r--    1 root     root         65536 Oct  1 12:50 art_bak.bin
-rw-r--r--    1 root     root        131072 Oct  1 12:49 uboot_bak.bin
root@OpenWrt:/tmp# exit
Connection to 192.168.1.1 closed.
anntony@anntony-Lenovo-B590 ~ $ 

這一段指令
把uboot和art資料備份到筆記型電腦上了
注意
那個時候備份下來的
uboot_bak.bin
它的大小有128 KBytes
它其實是上面我畫的
TP-Link原廠的4M編程器固件布局圖的最前面128 KBytes的部分
看到我畫的第二個圖
那是我們即將要產生的用來燒錄的16MB編程器固件影像檔
第一個64 KB的部分，要換成pepe2k的不死uboot，已經在步驟5.2裡編譯完成
第二個64 KB的部分，保留TP-Link原廠舊資料，這個64K裡面有Mac Address和WPS PIN等重要資訊，已經在步驟3.3備份下來
第三個16128 KB的部分，是從trunk分支的代碼編譯好的OpenWRT固件，已經在步驟5.3裡編譯完成
第四個64 KB的部分，因為要湊齊16MB = 16384 KB，所以要補上這64 KB的0xFF
第五個64 KB的部分，是art分割區的資料，沒有它的話，路由器會失去無線功能，已經在步驟3.3備份下來

凌晨三點了哦該睡了，待續
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊


(還沒整理…此文字檔案尚無參考價值)

16M = 16384k = 16777216 bytes

         64k = 65536 bytes

art開始的offset = 16320k = 16711680 bytes = 0xFF0000
把offset當成門牌，門牌從0開始算

0 - 16777215  共有 16777216 bytes
1-16777216 共有 16777216 bytes

16777216-65536 = 16711680 (前面有編號0-16711679共16711680個bytes)


openwrt firmware開始的offset是0x20000
也就是前面已經有128k的(u-boot)資料存在了

u-boot開始的地方當然是0x0，影像檔的最最前面
第2個64k開始的地方是0x10000，這裡開始算64k要放原廠flash rom裡的一些重要資訊像是mac address等等

如何產生一個16M的空白檔案，全部以0xFF來填充？
指令
$ dd if=/dev/zero ibs=1M count=16 | tr "\000" "\377" > emptyFile.bin

這個檔案要用來當成稍後剪貼的素材
對不起我心碎了這幾天
所以沒辦法工作
這幾個禮拜吧不只這幾天
希望趕快振作起來
