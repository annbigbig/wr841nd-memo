10.3.1 VPN

官網提到的情境0和情境1
DIAGRAM s0: {Internet} –WAN iface-||firewall||-[OpenWrt router]-LAN iface– {LAN} –[client]
DIAGRAM s1: [client]– {Internet} –WAN iface-||firewall||-[OpenWrt router]-LAN iface– {LAN}
情境0的VPN客戶端在OpenWRT路由器的內網裡，此網路環境較簡單，只用於測試
而情境1的VPN客戶端隔著Internet才能ping到OpenWRT路由器的WAN接口，較接近實際應用時的網路環境

建立VPN通道的流程概觀
（１）建立並發布PKI certificates和keys到server端和client端
（２）設定網路環境
（３）說定、啟動並測試VPN通道

工作列表
     10.3.1.1 在OpenWRT路由器上面安裝openvpn套件（VPN服務器）
     10.3.1.2 在Linux Mint 17上面安裝openvpn套件（VPN客戶端）
     10.3.1.3 產生CA和Certificates
     10.3.1.4 發布剛才產生的Certificates到服務器和客戶端的某個地方
     10.3.1.5 設定網路環境
          10.3.1.5.1 服務器的網路設定
          10.3.1.5.2 客戶端的網路設定
     10.3.1.6 OpenVPN基礎設施的設定
          10.3.1.6.1 OpenVPN Server設定
          10.3.1.6.2 OpenVPN Client設定
     10.3.1.7 測試從客戶端是否能順利對服務器建立起VPN通道？


＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.1 在OpenWRT路由器上面安裝openvpn套件（VPN服務器）

我編譯trunk 44893的時候
已經把openvpn-openssl套件給編譯進去了

root@wr841n:~# opkg update
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/base/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_base.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/luci/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_luci.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/management/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_management.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/packages/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_packages.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/routing/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_routing.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/telephony/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_telephony.
root@wr841n:~# df -h
Filesystem                Size      Used Available Use% Mounted on
rootfs                   10.8M    480.0K     10.3M   4% /
/dev/root                 4.0M      4.0M         0 100% /rom
tmpfs                    29.9M      1.3M     28.6M   4% /tmp
tmpfs                    29.9M    100.0K     29.8M   0% /tmp/root
tmpfs                   512.0K         0    512.0K   0% /dev
/dev/mtdblock3           10.8M    480.0K     10.3M   4% /overlay
overlayfs:/overlay       10.8M    480.0K     10.3M   4% /
root@wr841n:~# opkg install openvpn-easy-rsa
Installing openvpn-easy-rsa (2013-01-30-2) to root...
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/base/openvpn-easy-rsa_2013-01-30-2_ar71xx.ipk.
Installing openssl-util (1.0.2-3) to root...
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/base/openssl-util_1.0.2-3_ar71xx.ipk.
Configuring openssl-util.
Configuring openvpn-easy-rsa.
root@wr841n:~# df -h
Filesystem                Size      Used Available Use% Mounted on
rootfs                   10.8M    716.0K     10.1M   6% /
/dev/root                 4.0M      4.0M         0 100% /rom
tmpfs                    29.9M      1.2M     28.7M   4% /tmp
tmpfs                    29.9M    100.0K     29.8M   0% /tmp/root
tmpfs                   512.0K         0    512.0K   0% /dev
/dev/mtdblock3           10.8M    716.0K     10.1M   6% /overlay
overlayfs:/overlay       10.8M    716.0K     10.1M   6% /
root@wr841n:~# 

看一下我現在有安裝的openvpn套件有那些？
root@wr841n:~# opkg list-installed | grep openvpn
luci-app-openvpn - git-15.077.42209-6160a53-1
luci-i18n-openvpn-en - git-15.077.42209-6160a53-1
luci-i18n-openvpn-zh-tw - git-15.077.42209-6160a53-1
openvpn-easy-rsa - 2013-01-30-2
openvpn-openssl - 2.3.6-3
root@wr841n:~#


接下來產生ca、server、client的PKI certificates

root@wr841n:~# cat /etc/easy-rsa/vars
# easy-rsa parameter settings

# NOTE: If you installed from an RPM,
# don't edit this file in place in
# /usr/share/openvpn/easy-rsa --
# instead, you should copy the whole
# easy-rsa directory to another location
# (such as /etc/openvpn) so that your
# edits will not be wiped out by a future
# OpenVPN package upgrade.

# This variable should point to
# the top level of the easy-rsa
# tree.
export EASY_RSA="/etc/easy-rsa"

#
# This variable should point to
# the requested executables
#
export OPENSSL="openssl"
export PKCS11TOOL="pkcs11-tool"
export GREP="grep"


# This variable should point to
# the openssl.cnf file included
# with easy-rsa.
export KEY_CONFIG=`/usr/sbin/whichopensslcnf $EASY_RSA`

# Edit this variable to point to
# your soon-to-be-created key
# directory.
#
# WARNING: clean-all will do
# a rm -rf on this directory
# so make sure you define
# it correctly!
export KEY_DIR="$EASY_RSA/keys"

# Issue rm -rf warning
echo NOTE: If you run ./clean-all, I will be doing a rm -rf on $KEY_DIR

# PKCS11 fixes
export PKCS11_MODULE_PATH="dummy"
export PKCS11_PIN="dummy"

# Increase this to 2048 if you
# are paranoid.  This will slow
# down TLS negotiation performance
# as well as the one-time DH parms
# generation process.
export KEY_SIZE=2048

# In how many days should the root CA key expire?
export CA_EXPIRE=3650

# In how many days should certificates expire?
export KEY_EXPIRE=3650

# These are the default values for fields
# which will be placed in the certificate.
# Don't leave any of these fields blank.
export KEY_COUNTRY="US"
export KEY_PROVINCE="CA"
export KEY_CITY="SanFrancisco"
export KEY_ORG="Fort-Funston"
export KEY_EMAIL="me@myhost.mydomain"
export KEY_OU="MyOrganizationalUnit"

# X509 Subject Field
export KEY_NAME="EasyRSA"

# PKCS11 Smart Card
# export PKCS11_MODULE_PATH="/usr/lib/changeme.so"
# export PKCS11_PIN=1234

# If you'd like to sign all keys with the same Common Name, uncomment the KEY_CN export below
# You will also need to make sure your OpenVPN server config has the duplicate-cn option set
# export KEY_CN="CommonName"
root@wr841n:~# echo $KEY_NAME

root@wr841n:~# echo $KEY_DIR

root@wr841n:~# source /etc/easy-rsa/vars
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
root@wr841n:~# which clean-all
/usr/sbin/clean-all
root@wr841n:~# clean-all
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
root@wr841n:~# cd /etc/easy-rsa/
root@wr841n:/etc/easy-rsa# ls -al
drwxr-xr-x    3 root     root             0 Mar 20 03:53 .
drwxr-xr-x    1 root     root             0 Mar 20 03:49 ..
drwx------    2 root     root             0 Mar 20 03:53 keys
-rw-r--r--    1 root     root          8245 Mar 20 02:07 openssl-1.0.0.cnf
-rw-r--r--    1 root     root          2085 Mar 20 02:07 vars
root@wr841n:/etc/easy-rsa# ls -al ./keys/
drwx------    2 root     root             0 Mar 20 03:53 .
drwxr-xr-x    3 root     root             0 Mar 20 03:53 ..
-rw-r--r--    1 root     root             0 Mar 20 03:53 index.txt
-rw-r--r--    1 root     root             3 Mar 20 03:53 serial
root@wr841n:/etc/easy-rsa# cat /etc/easy-rsa/keys/serial
01
root@wr841n:/etc/easy-rsa# pkitool --initca
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
Using CA Common Name: Fort-Funston CA
Generating a 2048 bit RSA private key
...........................................+++
................................................................................................................................+++
writing new private key to 'ca.key'
-----
root@wr841n:/etc/easy-rsa# pkitool --server my-server
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
Generating a 2048 bit RSA private key
...........................................................................................................................+++
.....+++
writing new private key to 'my-server.key'
-----
Using configuration from /etc/easy-rsa/openssl-1.0.0.cnf
Check that the request matches the signature
Signature ok
The Subject's Distinguished Name is as follows
countryName           :PRINTABLE:'US'
stateOrProvinceName   :PRINTABLE:'CA'
localityName          :PRINTABLE:'SanFrancisco'
organizationName      :PRINTABLE:'Fort-Funston'
organizationalUnitName:PRINTABLE:'MyOrganizationalUnit'
commonName            :PRINTABLE:'my-server'
name                  :PRINTABLE:'EasyRSA'
emailAddress          :IA5STRING:'me@myhost.mydomain'
Certificate is to be certified until Mar 16 19:55:14 2025 GMT (3650 days)

Write out database with 1 new entries
Data Base Updated
root@wr841n:/etc/easy-rsa# pkitool my-client
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
Generating a 2048 bit RSA private key
.......................................+++
.......................................................................+++
writing new private key to 'my-client.key'
-----
Using configuration from /etc/easy-rsa/openssl-1.0.0.cnf
Check that the request matches the signature
Signature ok
The Subject's Distinguished Name is as follows
countryName           :PRINTABLE:'US'
stateOrProvinceName   :PRINTABLE:'CA'
localityName          :PRINTABLE:'SanFrancisco'
organizationName      :PRINTABLE:'Fort-Funston'
organizationalUnitName:PRINTABLE:'MyOrganizationalUnit'
commonName            :PRINTABLE:'my-client'
name                  :PRINTABLE:'EasyRSA'
emailAddress          :IA5STRING:'me@myhost.mydomain'
Certificate is to be certified until Mar 16 19:55:37 2025 GMT (3650 days)

Write out database with 1 new entries
Data Base Updated
root@wr841n:/etc/easy-rsa# 

這個動作最後作，產生diff-hellman金鑰
因為耗時會很久

root@wr841n:/etc/easy-rsa# build-dh
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
Generating DH parameters, 2048 bit long safe prime, generator 2
This is going to take a long time

root@wr841n:/etc/easy-rsa# 

然後這個時候
你的/etc/easy-rsa/keys/目錄裡面
應該要有這些檔案

root@wr841n:/etc/easy-rsa# ls -al /etc/easy-rsa/keys/
drwx------    2 root     root             0 Mar 20 04:09 .
drwxr-xr-x    3 root     root             0 Mar 20 03:53 ..
-rw-r--r--    1 root     root          5633 Mar 20 03:55 01.pem
-rw-r--r--    1 root     root          5516 Mar 20 03:55 02.pem
-rw-r--r--    1 root     root          1818 Mar 20 03:54 ca.crt
-rw-------    1 root     root          1704 Mar 20 03:54 ca.key
-rw-r--r--    1 root     root           424 Mar 20 04:09 dh2048.pem
-rw-r--r--    1 root     root           304 Mar 20 03:55 index.txt
-rw-r--r--    1 root     root            21 Mar 20 03:55 index.txt.attr
-rw-r--r--    1 root     root            21 Mar 20 03:55 index.txt.attr.old
-rw-r--r--    1 root     root           152 Mar 20 03:55 index.txt.old
-rw-r--r--    1 root     root          5516 Mar 20 03:55 my-client.crt
-rw-r--r--    1 root     root          1102 Mar 20 03:55 my-client.csr
-rw-------    1 root     root          1704 Mar 20 03:55 my-client.key
-rw-r--r--    1 root     root          5633 Mar 20 03:55 my-server.crt
-rw-r--r--    1 root     root          1102 Mar 20 03:55 my-server.csr
-rw-------    1 root     root          1704 Mar 20 03:55 my-server.key
-rw-r--r--    1 root     root             3 Mar 20 03:55 serial
-rw-r--r--    1 root     root             3 Mar 20 03:55 serial.old
root@wr841n:/etc/easy-rsa# cat keys/serial
03
root@wr841n:/etc/easy-rsa# cat keys/index.txt
V	250316195514Z		01	unknown	/C=US/ST=CA/L=SanFrancisco/O=Fort-Funston/OU=MyOrganizationalUnit/CN=my-server/name=EasyRSA/emailAddress=me@myhost.mydomain
V	250316195537Z		02	unknown	/C=US/ST=CA/L=SanFrancisco/O=Fort-Funston/OU=MyOrganizationalUnit/CN=my-client/name=EasyRSA/emailAddress=me@myhost.mydomain
root@wr841n:/etc/easy-rsa# 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.2 在Linux Mint 17上面安裝openvpn套件（VPN客戶端）

參考資料

打開桌面環境裡的Synaptic套件管理員
把
network-manager-openvpn
network-manager-openvpn-gnome
這兩個套件裝上

安裝好之後
在桌面右下角有個方方的圖示，按左鍵
會看到「VPN連線」>「設置VPN(C)...」

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.4 發布剛才產生的Certificates到服務器和客戶端的某個地方

這是在wr841n路由器裡，把Openvpn服務器需要的檔案複製到目錄/etc/openvpn/
root@wr841n:~# echo $KEY_DIR
/etc/easy-rsa/keys
root@wr841n:~# cd $KEY_DIR
root@wr841n:/etc/easy-rsa/keys# ls -al /etc/openvpn
drwxr-xr-x    2 root     root             3 Mar 20 01:59 .
drwxr-xr-x    1 root     root             0 Mar 20 03:49 ..
root@wr841n:/etc/easy-rsa/keys# cp ca.crt my-server.* dh*.pem  /etc/openvpn/
root@wr841n:/etc/easy-rsa/keys# ls -al /etc/openvpn
drwxr-xr-x    1 root     root             0 Mar 20 15:00 .
drwxr-xr-x    1 root     root             0 Mar 20 03:49 ..
-rw-r--r--    1 root     root          1818 Mar 20 15:00 ca.crt
-rw-r--r--    1 root     root           424 Mar 20 15:00 dh2048.pem
-rw-r--r--    1 root     root          5633 Mar 20 15:00 my-server.crt
-rw-r--r--    1 root     root          1102 Mar 20 15:00 my-server.csr
-rw-------    1 root     root          1704 Mar 20 15:00 my-server.key
root@wr841n:/etc/easy-rsa/keys# 

然後要把剛才產生的ca.crt和my-client開頭的所有檔案複製到Openvpn Client（筆記型電腦）上
還是在wr841n路由器裡
先把這些檔案複製到/tmp
root@wr841n:/etc/easy-rsa/keys# cp ca.crt my-client.* /tmp
root@wr841n:/etc/easy-rsa/keys# cd /tmp
root@wr841n:/tmp# ls -al|grep ca.crt
-rw-r--r--    1 root     root          1818 Mar 20 15:16 ca.crt
root@wr841n:/tmp# ls -al|grep my-client
-rw-r--r--    1 root     root          5516 Mar 20 15:16 my-client.crt
-rw-r--r--    1 root     root          1102 Mar 20 15:16 my-client.csr
-rw-------    1 root     root          1704 Mar 20 15:16 my-client.key
root@wr841n:/tmp# chown tonychacha:tonychacha my-client.key 

回到筆記型電腦上，用scp去複製
再放到/home/anntony/openvpn-client目錄裡面

anntony@anntony-Lenovo-B590 ~ $ cd /tmp
anntony@anntony-Lenovo-B590 /tmp $ scp wr841n:/tmp/ca.crt .
ca.crt                                                                                           100% 1818     1.8KB/s   00:00    
anntony@anntony-Lenovo-B590 /tmp $ scp wr841n:/tmp/my-client.* .
my-client.crt                                                                                    100% 5516     5.4KB/s   00:00    
my-client.csr                                                                                    100% 1102     1.1KB/s   00:00    
my-client.key                                                                                    100% 1704     1.7KB/s   00:00    
anntony@anntony-Lenovo-B590 /tmp $ mkdir -p /home/anntony/openvpn-client
anntony@anntony-Lenovo-B590 /tmp $ cp ca.crt /home/anntony/openvpn-client/
anntony@anntony-Lenovo-B590 /tmp $ cp my-client.* /home/anntony/openvpn-client/
anntony@anntony-Lenovo-B590 /tmp $ chown -R anntony:anntony /home/anntony/openvpn-client/
anntony@anntony-Lenovo-B590 /tmp $ cd /home/anntony/openvpn-client/
anntony@anntony-Lenovo-B590 ~/openvpn-client $ ls -al
總計 28
drwxr-xr-x  2 anntony anntony 4096  3月 20 15:49 .
drwxr-xr-x 75 anntony anntony 4096  3月 20 15:49 ..
-rw-r--r--  1 anntony anntony 1818  3月 20 15:49 ca.crt
-rw-r--r--  1 anntony anntony 5516  3月 20 15:49 my-client.crt
-rw-r--r--  1 anntony anntony 1102  3月 20 15:49 my-client.csr
-rw-------  1 anntony anntony 1704  3月 20 15:49 my-client.key
anntony@anntony-Lenovo-B590 ~/openvpn-client $ 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.5 設定網路環境
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.5.1 服務器的網路設定

建立vpn接口tun0
root@wr841n:~# uci set network.vpn0=interface
root@wr841n:~# uci set network.vpn0.ifname=tun0
root@wr841n:~# uci set network.vpn0.proto=none
root@wr841n:~# uci commit network
root@wr841n:~# /etc/init.d/network reload

防火牆配置
root@wr841n:~# uci add firewall  rule
cfg1892bd
root@wr841n:~# uci set firewall.@rule[-1].name=Allow-OpenVPN-Inbound
root@wr841n:~# uci set firewall.@rule[-1].target=ACCEPT
root@wr841n:~# uci set firewall.@rule[-1].src=*
root@wr841n:~# uci set firewall.@rule[-1].proto=udp
root@wr841n:~# uci set firewall.@rule[-1].dest_port=1194
root@wr841n:~# 
root@wr841n:~# 
root@wr841n:~# uci add firewall  zone
cfg19dc81
root@wr841n:~# uci set firewall.@zone[-1].name=vpn
root@wr841n:~# uci set firewall.@zone[-1].input=ACCEPT
root@wr841n:~# uci set firewall.@zone[-1].forward=ACCEPT
root@wr841n:~# uci set firewall.@zone[-1].output=ACCEPT
root@wr841n:~# uci set firewall.@zone[-1].network=vpn0
root@wr841n:~# uci commit firewall
root@wr841n:~# /etc/init.d/firewall reload
Warning: Unable to locate ipset utility, disabling ipset support
 * Clearing IPv4 filter table
 * Clearing IPv4 nat table
 * Clearing IPv4 mangle table
 * Clearing IPv4 raw table
 * Populating IPv4 filter table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
Warning: fw3_ipt_rule_append(): Can't find target 'input_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'output_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'forwarding_vpn_rule'
   * Rule 'Allow-DHCP-Renew'
   * Rule 'Allow-Ping'
   * Rule 'Allow-OpenVPN-Inbound'
   * Redirect 'Forward36000'
   * Forward 'lan' -> 'wan'
 * Populating IPv4 nat table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
Warning: fw3_ipt_rule_append(): Can't find target 'prerouting_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'postrouting_vpn_rule'
   * Redirect 'Forward36000'
 * Populating IPv4 mangle table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Populating IPv4 raw table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Clearing IPv6 filter table
 * Clearing IPv6 mangle table
 * Clearing IPv6 raw table
 * Populating IPv6 filter table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
Warning: fw3_ipt_rule_append(): Can't find target 'input_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'output_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'forwarding_vpn_rule'
   * Rule 'Allow-DHCPv6'
   * Rule 'Allow-ICMPv6-Input'
   * Rule 'Allow-ICMPv6-Forward'
   * Rule 'Allow-OpenVPN-Inbound'
   * Forward 'lan' -> 'wan'
 * Populating IPv6 mangle table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Populating IPv6 raw table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Set tcp_ecn to off
 * Set tcp_syncookies to on
 * Set tcp_window_scaling to on
root@wr841n:~# 

然後我看了一下完成設定後
/etc/config/firewall多了什麼？

root@wr841n:~# cat /etc/config/firewall 

config defaults
	option syn_flood '1'
	option input 'ACCEPT'
	option output 'ACCEPT'
	option forward 'REJECT'

config zone
	option name 'lan'
	list network 'lan'
	option input 'ACCEPT'
	option output 'ACCEPT'
	option forward 'ACCEPT'

config zone
	option name 'wan'
	list network 'wan'
	list network 'wan6'
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option masq '1'
	option mtu_fix '1'

config forwarding
	option src 'lan'
	option dest 'wan'

config rule
	option name 'Allow-DHCP-Renew'
	option src 'wan'
	option proto 'udp'
	option dest_port '68'
	option target 'ACCEPT'
	option family 'ipv4'

config rule
	option name 'Allow-Ping'
	option src 'wan'
	option proto 'icmp'
	option icmp_type 'echo-request'
	option family 'ipv4'
	option target 'ACCEPT'

config rule
	option name 'Allow-DHCPv6'
	option src 'wan'
	option proto 'udp'
	option src_ip 'fe80::/10'
	option src_port '547'
	option dest_ip 'fe80::/10'
	option dest_port '546'
	option family 'ipv6'
	option target 'ACCEPT'

config rule
	option name 'Allow-ICMPv6-Input'
	option src 'wan'
	option proto 'icmp'
	list icmp_type 'echo-request'
	list icmp_type 'echo-reply'
	list icmp_type 'destination-unreachable'
	list icmp_type 'packet-too-big'
	list icmp_type 'time-exceeded'
	list icmp_type 'bad-header'
	list icmp_type 'unknown-header-type'
	list icmp_type 'router-solicitation'
	list icmp_type 'neighbour-solicitation'
	list icmp_type 'router-advertisement'
	list icmp_type 'neighbour-advertisement'
	option limit '1000/sec'
	option family 'ipv6'
	option target 'ACCEPT'

config rule
	option name 'Allow-ICMPv6-Forward'
	option src 'wan'
	option dest '*'
	option proto 'icmp'
	list icmp_type 'echo-request'
	list icmp_type 'echo-reply'
	list icmp_type 'destination-unreachable'
	list icmp_type 'packet-too-big'
	list icmp_type 'time-exceeded'
	list icmp_type 'bad-header'
	list icmp_type 'unknown-header-type'
	option limit '1000/sec'
	option family 'ipv6'
	option target 'ACCEPT'

config include
	option path '/etc/firewall.user'

config redirect
	option target 'DNAT'
	option src 'wan'
	option dest 'lan'
	option proto 'tcp'
	option src_dport '36000'
	option dest_ip '10.1.1.96'
	option dest_port '36000'
	option name 'Forward36000'

config rule
	option name 'Allow-OpenVPN-Inbound'
	option target 'ACCEPT'
	option src '*'
	option proto 'udp'
	option dest_port '1194'

config zone
	option name 'vpn'
	option input 'ACCEPT'
	option forward 'ACCEPT'
	option output 'ACCEPT'
	option network 'vpn0'

root@wr841n:~# 

最後，可以用這兩個指令
查看每個網路使用的接口名稱，和每個zone裡有那些網路？
root@wr841n:~# uci show network | grep ifname
network.loopback.ifname=lo
network.lan.ifname=eth1
network.wan.ifname=eth0
network.wan6.ifname=eth0
network.vpn0.ifname=tun0
root@wr841n:~# uci show firewall | grep zone | grep -E "(net|name)"
firewall.@zone[0].name=lan
firewall.@zone[0].network=lan
firewall.@zone[1].name=wan
firewall.@zone[1].network=wan wan6
firewall.@zone[2].name=vpn
firewall.@zone[2].network=vpn0
root@wr841n:~# 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.5.2 客戶端的網路設定

Openvpn Client端的IP是10.1.1.91，也就是筆記型電腦
Openvpn Server端的IP是10.1.1.1，也就是wr841n路由器

在筆記型電腦上確認防火牆規則的狀態
anntony-Lenovo-B590 ~ # iptables -t filter -L -n --line-number
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination         

Chain FORWARD (policy ACCEPT)
num  target     prot opt source               destination         

Chain OUTPUT (policy ACCEPT)
num  target     prot opt source               destination         
anntony-Lenovo-B590 ~ #

上面的訊息可以知道，完全沒有設置防火牆
然後測試一下可以直接ping到wr841n路由器嗎？
anntony-Lenovo-B590 ~ # ifconfig eth0
eth0      Link encap:Ethernet  HWaddr 54:ee:75:09:dc:3e  
          inet addr:10.1.1.91  Bcast:10.1.1.255  Mask:255.255.255.0
          inet6 addr: fe80::56ee:75ff:fe09:dc3e/64 Scope:Link
          inet6 addr: fde8:1b7d:98af::cf4/128 Scope:Global
          inet6 addr: fde8:1b7d:98af:0:56ee:75ff:fe09:dc3e/64 Scope:Global
          inet6 addr: fde8:1b7d:98af:0:8f9:1027:723f:4e5b/64 Scope:Global
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:763782 errors:0 dropped:0 overruns:0 frame:0
          TX packets:594987 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:788644479 (788.6 MB)  TX bytes:84537471 (84.5 MB)

anntony-Lenovo-B590 ~ # ping 10.1.1.1
PING 10.1.1.1 (10.1.1.1) 56(84) bytes of data.
64 bytes from 10.1.1.1: icmp_seq=1 ttl=64 time=0.309 ms
64 bytes from 10.1.1.1: icmp_seq=2 ttl=64 time=0.319 ms
^C
--- 10.1.1.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1000ms
rtt min/avg/max/mdev = 0.309/0.314/0.319/0.005 ms
anntony-Lenovo-B590 ~ # 

這樣客戶端這邊就搞定了
先用最簡單的配置
稍後要模擬真實世界的Openvpn環境的時候,
再讓Openvpn Client端和Server端處於不同的subnet（也就是兩邊隔著Internet）

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.6 OpenVPN基礎設施的設定
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.6.1 OpenVPN Server設定

root@wr841n:~# cp /etc/config/openvpn /root/etc_config_openvpn_default
root@wr841n:~# netstat -anp|grep 1194
root@wr841n:~# netstat -anp|grep vpn
root@wr841n:~# echo > /etc/config/openvpn
root@wr841n:~# uci set openvpn.myvpn=openvpn
root@wr841n:~# uci set openvpn.myvpn.enabled=1
root@wr841n:~# uci set openvpn.myvpn.dev=tun
root@wr841n:~# uci set openvpn.myvpn.proto=udp
root@wr841n:~# uci set openvpn.myvpn.log=/tmp/openvpn.log
root@wr841n:~# uci set openvpn.myvpn.verb=3
root@wr841n:~# uci set openvpn.myvpn.ca=/etc/openvpn/ca.crt
root@wr841n:~# uci set openvpn.myvpn.cert=`ls /etc/openvpn/my-*.crt`
root@wr841n:~# uci set openvpn.myvpn.key=`ls /etc/openvpn/my-*.key`
root@wr841n:~# uci set openvpn.myvpn.server='10.8.0.0 255.255.255.0'
root@wr841n:~# uci set openvpn.myvpn.port=1194
root@wr841n:~# uci set openvpn.myvpn.keepalive='10 120'
root@wr841n:~# uci set openvpn.myvpn.dh=`ls /etc/openvpn/dh*.pem`
root@wr841n:~# uci set openvpn.myvpn.push=''
root@wr841n:~# uci commit openvpn
root@wr841n:~# /etc/init.d/openvpn enable
root@wr841n:~# /etc/init.d/openvpn start; sleep 3
root@wr841n:~# ps -w | grep openvpn
11226 root      3216 S    /usr/sbin/openvpn --syslog openvpn(myvpn) --status /var/run/openvpn.myvpn.status --cd /var/etc --config o
11346 root      1356 S    grep openvpn
root@wr841n:~# ifconfig | grep tun0
tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  
root@wr841n:~# netstat -an | grep 1194
udp        0      0 0.0.0.0:1194            0.0.0.0:*                           
root@wr841n:~# 
root@wr841n:~# ifconfig tun0
tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  
          inet addr:10.8.0.1  P-t-P:10.8.0.2  Mask:255.255.255.255
          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:100 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root@wr841n:~# 

哦，真的啟動了Openvpn Server於udp端口1194

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.6.2 OpenVPN Client設定

現在來到筆記型電腦上，我的OS是Linux Mint 17
稍早前已經安裝了
network-manager-openvpn
network-manager-openvpn-gnome
這兩個套件
在桌面環境右下角的「VPN連線」>「設置VPN(C)...」>「加入(A)」
「請選擇連線類型」>「OpenVPN」>「建立...」
填入
連線名稱(N)：myVPN
General
  Gateway：10.1.1.1

Authentication
  Type：憑證(TLS)
  User Certificate：/home/anntony/openvpn-client/my-client.crt
  CA Certificate：/home/anntony/openvpn-client/ca.crt
  Private Key：/home/anntony/openvpn-client/my-client.key
  Private Key Password：這個不用填

按下「儲存」
再到桌面右下角，選「VPN連線」>「myVPN」
出現了
「VPN登錄訊息->VPN連線已成功的」
右下角出現一個兩台電腦的小圖示，然後鼠標放上去
可以看到
有線網路連線「myVPN」在使用中
VPN 連線「myVPN」在使用中

打開筆記型電腦的終端機，執行
anntony-Lenovo-B590 ~ # netstat -anp|grep vpn
tcp        0      0 127.0.0.1:1194          0.0.0.0:*               LISTEN      10424/openvpn   
tcp        0      0 127.0.0.1:1194          127.0.0.1:60516         ESTABLISHED 10424/openvpn   
tcp        0      0 127.0.0.1:60516         127.0.0.1:1194          ESTABLISHED 10421/nm-openvpn-se
udp        0      0 0.0.0.0:40604           0.0.0.0:*                           10424/openvpn   
unix  3      [ ]         STREAM     CONNECTED     726319   10421/nm-openvpn-se 
unix  2      [ ]         DGRAM                    726332   10424/openvpn  
anntony-Lenovo-B590 ~ # ifconfig tun0
tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  
          inet addr:10.8.0.6  P-t-P:10.8.0.5  Mask:255.255.255.255
          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:18 errors:0 dropped:0 overruns:0 frame:0
          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:100 
          RX bytes:1232 (1.2 KB)  TX bytes:1288 (1.2 KB)

不過這裡的路由表怪怪的
anntony-Lenovo-B590 ~ # route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         10.8.0.5        0.0.0.0         UG    0      0        0 tun0
10.1.1.0        0.0.0.0         255.255.255.0   U     1      0        0 eth0
10.1.1.1        0.0.0.0         255.255.255.255 UH    0      0        0 eth0
10.8.0.1        10.8.0.5        255.255.255.255 UGH   0      0        0 tun0
10.8.0.5        0.0.0.0         255.255.255.255 UH    0      0        0 tun0
anntony-Lenovo-B590 ~ # 

建立了vpn tunnel的時候，筆記型電腦不能連上Internet
anntony-Lenovo-B590 ~ # ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
From 10.8.0.1 icmp_seq=1 Destination Port Unreachable
From 10.8.0.1 icmp_seq=2 Destination Port Unreachable
From 10.8.0.1 icmp_seq=3 Destination Port Unreachable
^C
--- 8.8.8.8 ping statistics ---
3 packets transmitted, 0 received, +3 errors, 100% packet loss, time 2002ms

anntony-Lenovo-B590 ~ # traceroute 8.8.8.8
traceroute to 8.8.8.8 (8.8.8.8), 30 hops max, 60 byte packets
 1  10.8.0.1 (10.8.0.1)  6.230 ms  6.433 ms  6.696 ms
 2  10.8.0.1 (10.8.0.1)  6.973 ms  7.398 ms  7.841 ms
anntony-Lenovo-B590 ~ # traceroute tw.yahoo.com
traceroute to tw.yahoo.com (116.214.12.74), 30 hops max, 60 byte packets
 1  10.8.0.1 (10.8.0.1)  5.706 ms  5.838 ms  6.122 ms
 2  10.8.0.1 (10.8.0.1)  7.262 ms  9.092 ms  9.360 ms
anntony-Lenovo-B590 ~ # ping tw.yahoo.com
PING fd-fp3.wg1.b.yahoo.com (116.214.12.74) 56(84) bytes of data.
From 10.8.0.1 icmp_seq=1 Destination Port Unreachable
From 10.8.0.1 icmp_seq=2 Destination Port Unreachable
^C
--- fd-fp3.wg1.b.yahoo.com ping statistics ---
2 packets transmitted, 0 received, +2 errors, 100% packet loss, time 1001ms

anntony-Lenovo-B590 ~ # 

和OpenVPN Server斷開之後，路由表恢復正常，才能再次連上Internet
anntony-Lenovo-B590 ~ # route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         10.1.1.1        0.0.0.0         UG    0      0        0 eth0
10.1.1.0        0.0.0.0         255.255.255.0   U     1      0        0 eth0
anntony-Lenovo-B590 ~ # ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=45 time=26.8 ms
64 bytes from 8.8.8.8: icmp_seq=2 ttl=45 time=27.6 ms
^C
--- 8.8.8.8 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 26.891/27.295/27.699/0.404 ms
anntony-Lenovo-B590 ~ # ping tw.yahoo.com
PING fd-fp3.wg1.b.yahoo.com (116.214.12.74) 56(84) bytes of data.
64 bytes from ir1.fp.vip.tp2.yahoo.com (116.214.12.74): icmp_seq=1 ttl=55 time=25.6 ms
64 bytes from ir1.fp.vip.tp2.yahoo.com (116.214.12.74): icmp_seq=2 ttl=55 time=26.1 ms
^C
--- fd-fp3.wg1.b.yahoo.com ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 25.692/25.920/26.148/0.228 ms
anntony-Lenovo-B590 ~ # 

我用關鍵字
network-manager-openvpn-gnome routing table I cannot connect to Internet
搜尋
得到
http://serverfault.com/questions/647245/ubuntu-openvpn-gui-setting-incorrect-default-routing-gateway

照著上面講的
Edit the VPN connection -> IPv4 Settings -> Click "Routes", 
and finally check "Use this connection only for resources on its network".

在Linux Mint 17桌面環境右下角
「VPN連線」>「設置VPN(C)...」>「myVPN」>「編輯(E)...」>「IPV4設定」>「路由(R)...」
把「只在使用這個連線的網路資源時，才使用此連線(U)」勾起來
「確定」>「儲存(S)...」

再連一次OpenVPN Server試試看
桌面右下角「VPN連線」>「myVPN」，連上之後
anntony-Lenovo-B590 ~ # route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         10.1.1.1        0.0.0.0         UG    0      0        0 eth0
10.1.1.0        0.0.0.0         255.255.255.0   U     1      0        0 eth0
10.1.1.1        0.0.0.0         255.255.255.255 UH    0      0        0 eth0
10.8.0.1        10.8.0.5        255.255.255.255 UGH   0      0        0 tun0
10.8.0.5        0.0.0.0         255.255.255.255 UH    0      0        0 tun0
anntony-Lenovo-B590 ~ # ping tw.yahoo.com
PING fd-fp3.wg1.b.yahoo.com (116.214.12.74) 56(84) bytes of data.
64 bytes from ir1.fp.vip.tp2.yahoo.com (116.214.12.74): icmp_seq=1 ttl=55 time=25.7 ms
64 bytes from ir1.fp.vip.tp2.yahoo.com (116.214.12.74): icmp_seq=2 ttl=55 time=25.0 ms
64 bytes from ir1.fp.vip.tp2.yahoo.com (116.214.12.74): icmp_seq=3 ttl=55 time=25.2 ms
^C
--- fd-fp3.wg1.b.yahoo.com ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2002ms
rtt min/avg/max/mdev = 25.035/25.332/25.745/0.352 ms
anntony-Lenovo-B590 ~ # ping 10.8.0.1
PING 10.8.0.1 (10.8.0.1) 56(84) bytes of data.
64 bytes from 10.8.0.1: icmp_seq=1 ttl=64 time=1.25 ms
64 bytes from 10.8.0.1: icmp_seq=2 ttl=64 time=1.27 ms
^C
--- 10.8.0.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 1.255/1.262/1.270/0.036 ms
anntony-Lenovo-B590 ~ # ping 10.1.1.1
PING 10.1.1.1 (10.1.1.1) 56(84) bytes of data.
64 bytes from 10.1.1.1: icmp_seq=1 ttl=64 time=0.319 ms
64 bytes from 10.1.1.1: icmp_seq=2 ttl=64 time=0.281 ms
^C
--- 10.1.1.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 999ms
rtt min/avg/max/mdev = 0.281/0.300/0.319/0.019 ms
anntony-Lenovo-B590 ~ # 

現在正常了，不管是ping tw.yahoo.com
或是對著wr841n的tun0接口的
ping 10.8.0.1
都可以連通
但是看路由表預設的Gateway是10.1.1.1
（所以我的筆記型電腦還是保持原來的gateway，當然能上網）
我期待的是
VPN tunnel建立之後
預設的Gateway被換成10.8.0.5
然後這時候應該要可以ping tw.yahoo.com
這樣才對

有那裡沒弄呢？
我又回到Linux Mint 17桌面環境右下角
「VPN連線」>「設置VPN(C)...」>「myVPN」>「編輯(E)...」>「IPV4設定」>「路由(R)...」
把「只在使用這個連線的網路資源時，才使用此連線(U)」取消掉
「確定」>「儲存(S)...」

我真的很好奇
到底是OpenVPN Server的那裡沒有弄
造成OpenVPN Client建立vpn tunnel之後
用10.8.0.5當成預設Gateway居然不能上網

於是我回到wr841n路由器上
編輯了/etc/config/firewall

我在這個區塊的後面
config zone                    
        option name 'vpn'
        option input 'ACCEPT'
        option forward 'ACCEPT'
        option output 'ACCEPT'
        option network 'vpn0'

加上了
config forwarding              
        option src 'vpn'
        option dest 'wan'

然後重新啟動防火牆root@wr841n:~# /etc/init.d/firewall reload
Warning: Unable to locate ipset utility, disabling ipset support
 * Clearing IPv4 filter table
 * Clearing IPv4 nat table
 * Clearing IPv4 mangle table
 * Clearing IPv4 raw table
 * Populating IPv4 filter table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
Warning: fw3_ipt_rule_append(): Can't find target 'input_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'output_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'forwarding_vpn_rule'
   * Rule 'Allow-DHCP-Renew'
   * Rule 'Allow-Ping'
   * Rule 'Allow-OpenVPN-Inbound'
   * Redirect 'Forward36000'
   * Forward 'lan' -> 'wan'
   * Forward 'vpn' -> 'wan'
 * Populating IPv4 nat table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
Warning: fw3_ipt_rule_append(): Can't find target 'prerouting_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'postrouting_vpn_rule'
   * Redirect 'Forward36000'
 * Populating IPv4 mangle table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Populating IPv4 raw table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Clearing IPv6 filter table
 * Clearing IPv6 mangle table
 * Clearing IPv6 raw table
 * Populating IPv6 filter table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
Warning: fw3_ipt_rule_append(): Can't find target 'input_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'output_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'forwarding_vpn_rule'
   * Rule 'Allow-DHCPv6'
   * Rule 'Allow-ICMPv6-Input'
   * Rule 'Allow-ICMPv6-Forward'
   * Rule 'Allow-OpenVPN-Inbound'
   * Forward 'lan' -> 'wan'
   * Forward 'vpn' -> 'wan'
 * Populating IPv6 mangle table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Populating IPv6 raw table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Set tcp_ecn to off
 * Set tcp_syncookies to on
 * Set tcp_window_scaling to on
root@wr841n:~# 

回到筆記型電腦上，再重新建立一次vpn tunnel試試
建立之後
anntony-Lenovo-B590 log # traceroute 8.8.8.8
traceroute to 8.8.8.8 (8.8.8.8), 30 hops max, 60 byte packets
 1  10.8.0.1 (10.8.0.1)  8.051 ms  9.013 ms  8.946 ms
 2  192.168.0.1 (192.168.0.1)  8.896 ms  9.108 ms  13.023 ms
 3  * * *
 4  h254.s98.ts.hinet.net (168.95.98.254)  32.511 ms  34.433 ms  34.775 ms
 5  sipr-3301.hinet.net (168.95.160.2)  32.792 ms  46.121 ms  46.345 ms
 6  tpdt-3011.hinet.net (220.128.1.74)  46.788 ms TPDT-3011.hinet.net (220.128.1.94)  39.544 ms  38.937 ms
 7  * * *
 8  tyfo-3301.hinet.net (220.128.8.225)  37.490 ms  27.448 ms  27.310 ms
 9  72.14.205.102 (72.14.205.102)  54.838 ms 72.14.196.3 (72.14.196.3)  39.303 ms 74.125.49.158 (74.125.49.158)  26.255 ms
10  72.14.233.20 (72.14.233.20)  44.538 ms 209.85.243.30 (209.85.243.30)  42.426 ms  42.175 ms
11  * * *
12  72.14.238.9 (72.14.238.9)  40.355 ms 209.85.249.7 (209.85.249.7)  32.875 ms 216.239.43.101 (216.239.43.101)  41.760 ms
13  * * *
14  google-public-dns-a.google.com (8.8.8.8)  30.393 ms  28.260 ms  39.883 ms
anntony-Lenovo-B590 log # ping tw.yahoo.com
PING fd-fp3.wg1.b.yahoo.com (116.214.12.74) 56(84) bytes of data.
64 bytes from ir1.fp.vip.tp2.yahoo.com (116.214.12.74): icmp_seq=1 ttl=55 time=27.1 ms
64 bytes from ir1.fp.vip.tp2.yahoo.com (116.214.12.74): icmp_seq=2 ttl=55 time=26.1 ms
64 bytes from ir1.fp.vip.tp2.yahoo.com (116.214.12.74): icmp_seq=3 ttl=55 time=32.6 ms
^C
--- fd-fp3.wg1.b.yahoo.com ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2002ms
rtt min/avg/max/mdev = 26.182/28.656/32.655/2.857 ms
anntony-Lenovo-B590 log #

所以果然是剛才wr841n路由器上那個從vpn到wan的forwarding規則沒開的關係
現在真的正常了
而且建立vpn tunnel之後
使用的預設gateway是tun0給的10.8.0.5

anntony-Lenovo-B590 log # ifconfig tun0
tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  
          inet addr:10.8.0.6  P-t-P:10.8.0.5  Mask:255.255.255.255
          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:4198 errors:0 dropped:0 overruns:0 frame:0
          TX packets:3338 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:100 
          RX bytes:3691799 (3.6 MB)  TX bytes:486782 (486.7 KB)

anntony-Lenovo-B590 log # 

其他參考資料
https://help.ubuntu.com/community/VPNClient#VPN_Clients
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊




