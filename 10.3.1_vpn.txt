10.3.1 VPN

官網提到的情境0和情境1
DIAGRAM s0: {Internet} –WAN iface-||firewall||-[OpenWrt router]-LAN iface– {LAN} –[client]
DIAGRAM s1: [client]– {Internet} –WAN iface-||firewall||-[OpenWrt router]-LAN iface– {LAN}
情境0的VPN客戶端在OpenWRT路由器的內網裡，此網路環境較簡單，只用於測試
而情境1的VPN客戶端隔著Internet才能ping到OpenWRT路由器的WAN接口，較接近實際應用時的網路環境

建立VPN通道的流程概觀
（１）建立並發布PKI certificates和keys到server端和client端
（２）設定網路環境
（３）說定、啟動並測試VPN通道

工作列表
     10.3.1.1 在OpenWRT路由器上面安裝openvpn套件（VPN服務器）
     10.3.1.2 在Linux Mint 17上面安裝openvpn套件（VPN客戶端）
     10.3.1.3 產生CA和Certificates
     10.3.1.4 發布剛才產生的Certificates到服務器和客戶端的某個地方
     10.3.1.5 設定網路環境
          10.3.1.5.1 服務器的網路設定
          10.3.1.5.2 客戶端的網路設定
     10.3.1.6 OpenVPN基礎設施的設定
          10.3.1.6.1 OpenVPN Server設定
          10.3.1.6.2 OpenVPN Client設定
     10.3.1.7 測試從客戶端是否能順利對服務器建立起VPN通道？


＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.1 在OpenWRT路由器上面安裝openvpn套件（VPN服務器）

我編譯trunk 44893的時候
已經把openvpn-openssl套件給編譯進去了

root@wr841n:~# opkg update
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/base/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_base.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/luci/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_luci.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/management/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_management.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/packages/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_packages.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/routing/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_routing.
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/telephony/Packages.gz.
Updated list of available packages in /var/opkg-lists/chaos_calmer_telephony.
root@wr841n:~# df -h
Filesystem                Size      Used Available Use% Mounted on
rootfs                   10.8M    480.0K     10.3M   4% /
/dev/root                 4.0M      4.0M         0 100% /rom
tmpfs                    29.9M      1.3M     28.6M   4% /tmp
tmpfs                    29.9M    100.0K     29.8M   0% /tmp/root
tmpfs                   512.0K         0    512.0K   0% /dev
/dev/mtdblock3           10.8M    480.0K     10.3M   4% /overlay
overlayfs:/overlay       10.8M    480.0K     10.3M   4% /
root@wr841n:~# opkg install openvpn-easy-rsa
Installing openvpn-easy-rsa (2013-01-30-2) to root...
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/base/openvpn-easy-rsa_2013-01-30-2_ar71xx.ipk.
Installing openssl-util (1.0.2-3) to root...
Downloading http://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/packages/base/openssl-util_1.0.2-3_ar71xx.ipk.
Configuring openssl-util.
Configuring openvpn-easy-rsa.
root@wr841n:~# df -h
Filesystem                Size      Used Available Use% Mounted on
rootfs                   10.8M    716.0K     10.1M   6% /
/dev/root                 4.0M      4.0M         0 100% /rom
tmpfs                    29.9M      1.2M     28.7M   4% /tmp
tmpfs                    29.9M    100.0K     29.8M   0% /tmp/root
tmpfs                   512.0K         0    512.0K   0% /dev
/dev/mtdblock3           10.8M    716.0K     10.1M   6% /overlay
overlayfs:/overlay       10.8M    716.0K     10.1M   6% /
root@wr841n:~# 

看一下我現在有安裝的openvpn套件有那些？
root@wr841n:~# opkg list-installed | grep openvpn
luci-app-openvpn - git-15.077.42209-6160a53-1
luci-i18n-openvpn-en - git-15.077.42209-6160a53-1
luci-i18n-openvpn-zh-tw - git-15.077.42209-6160a53-1
openvpn-easy-rsa - 2013-01-30-2
openvpn-openssl - 2.3.6-3
root@wr841n:~#


接下來產生ca、server、client的PKI certificates

root@wr841n:~# cat /etc/easy-rsa/vars
# easy-rsa parameter settings

# NOTE: If you installed from an RPM,
# don't edit this file in place in
# /usr/share/openvpn/easy-rsa --
# instead, you should copy the whole
# easy-rsa directory to another location
# (such as /etc/openvpn) so that your
# edits will not be wiped out by a future
# OpenVPN package upgrade.

# This variable should point to
# the top level of the easy-rsa
# tree.
export EASY_RSA="/etc/easy-rsa"

#
# This variable should point to
# the requested executables
#
export OPENSSL="openssl"
export PKCS11TOOL="pkcs11-tool"
export GREP="grep"


# This variable should point to
# the openssl.cnf file included
# with easy-rsa.
export KEY_CONFIG=`/usr/sbin/whichopensslcnf $EASY_RSA`

# Edit this variable to point to
# your soon-to-be-created key
# directory.
#
# WARNING: clean-all will do
# a rm -rf on this directory
# so make sure you define
# it correctly!
export KEY_DIR="$EASY_RSA/keys"

# Issue rm -rf warning
echo NOTE: If you run ./clean-all, I will be doing a rm -rf on $KEY_DIR

# PKCS11 fixes
export PKCS11_MODULE_PATH="dummy"
export PKCS11_PIN="dummy"

# Increase this to 2048 if you
# are paranoid.  This will slow
# down TLS negotiation performance
# as well as the one-time DH parms
# generation process.
export KEY_SIZE=2048

# In how many days should the root CA key expire?
export CA_EXPIRE=3650

# In how many days should certificates expire?
export KEY_EXPIRE=3650

# These are the default values for fields
# which will be placed in the certificate.
# Don't leave any of these fields blank.
export KEY_COUNTRY="US"
export KEY_PROVINCE="CA"
export KEY_CITY="SanFrancisco"
export KEY_ORG="Fort-Funston"
export KEY_EMAIL="me@myhost.mydomain"
export KEY_OU="MyOrganizationalUnit"

# X509 Subject Field
export KEY_NAME="EasyRSA"

# PKCS11 Smart Card
# export PKCS11_MODULE_PATH="/usr/lib/changeme.so"
# export PKCS11_PIN=1234

# If you'd like to sign all keys with the same Common Name, uncomment the KEY_CN export below
# You will also need to make sure your OpenVPN server config has the duplicate-cn option set
# export KEY_CN="CommonName"
root@wr841n:~# echo $KEY_NAME

root@wr841n:~# echo $KEY_DIR

root@wr841n:~# source /etc/easy-rsa/vars
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
root@wr841n:~# which clean-all
/usr/sbin/clean-all
root@wr841n:~# clean-all
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
root@wr841n:~# cd /etc/easy-rsa/
root@wr841n:/etc/easy-rsa# ls -al
drwxr-xr-x    3 root     root             0 Mar 20 03:53 .
drwxr-xr-x    1 root     root             0 Mar 20 03:49 ..
drwx------    2 root     root             0 Mar 20 03:53 keys
-rw-r--r--    1 root     root          8245 Mar 20 02:07 openssl-1.0.0.cnf
-rw-r--r--    1 root     root          2085 Mar 20 02:07 vars
root@wr841n:/etc/easy-rsa# ls -al ./keys/
drwx------    2 root     root             0 Mar 20 03:53 .
drwxr-xr-x    3 root     root             0 Mar 20 03:53 ..
-rw-r--r--    1 root     root             0 Mar 20 03:53 index.txt
-rw-r--r--    1 root     root             3 Mar 20 03:53 serial
root@wr841n:/etc/easy-rsa# cat /etc/easy-rsa/keys/serial
01
root@wr841n:/etc/easy-rsa# pkitool --initca
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
Using CA Common Name: Fort-Funston CA
Generating a 2048 bit RSA private key
...........................................+++
................................................................................................................................+++
writing new private key to 'ca.key'
-----
root@wr841n:/etc/easy-rsa# pkitool --server my-server
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
Generating a 2048 bit RSA private key
...........................................................................................................................+++
.....+++
writing new private key to 'my-server.key'
-----
Using configuration from /etc/easy-rsa/openssl-1.0.0.cnf
Check that the request matches the signature
Signature ok
The Subject's Distinguished Name is as follows
countryName           :PRINTABLE:'US'
stateOrProvinceName   :PRINTABLE:'CA'
localityName          :PRINTABLE:'SanFrancisco'
organizationName      :PRINTABLE:'Fort-Funston'
organizationalUnitName:PRINTABLE:'MyOrganizationalUnit'
commonName            :PRINTABLE:'my-server'
name                  :PRINTABLE:'EasyRSA'
emailAddress          :IA5STRING:'me@myhost.mydomain'
Certificate is to be certified until Mar 16 19:55:14 2025 GMT (3650 days)

Write out database with 1 new entries
Data Base Updated
root@wr841n:/etc/easy-rsa# pkitool my-client
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
Generating a 2048 bit RSA private key
.......................................+++
.......................................................................+++
writing new private key to 'my-client.key'
-----
Using configuration from /etc/easy-rsa/openssl-1.0.0.cnf
Check that the request matches the signature
Signature ok
The Subject's Distinguished Name is as follows
countryName           :PRINTABLE:'US'
stateOrProvinceName   :PRINTABLE:'CA'
localityName          :PRINTABLE:'SanFrancisco'
organizationName      :PRINTABLE:'Fort-Funston'
organizationalUnitName:PRINTABLE:'MyOrganizationalUnit'
commonName            :PRINTABLE:'my-client'
name                  :PRINTABLE:'EasyRSA'
emailAddress          :IA5STRING:'me@myhost.mydomain'
Certificate is to be certified until Mar 16 19:55:37 2025 GMT (3650 days)

Write out database with 1 new entries
Data Base Updated
root@wr841n:/etc/easy-rsa# 

這個動作最後作，產生diff-hellman金鑰
因為耗時會很久

root@wr841n:/etc/easy-rsa# build-dh
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/easy-rsa/keys
Generating DH parameters, 2048 bit long safe prime, generator 2
This is going to take a long time
...........................................................................................+...........................................+.............................+....................................................................+..+......................................................................................................................................................................................................................................................................................................................+...............................................................................................................................................................+.+.............................+.............................................................................................+..........................................+.......................................+...............+....................................................................................................+..................................................................+...........................................................................................+................................................................................................+.....................................................................................................................................................................+......+......+..................................................................................................................++*++*
root@wr841n:/etc/easy-rsa# 

然後這個時候
你的/etc/easy-rsa/keys/目錄裡面
應該要有這些檔案

root@wr841n:/etc/easy-rsa# ls -al /etc/easy-rsa/keys/
drwx------    2 root     root             0 Mar 20 04:09 .
drwxr-xr-x    3 root     root             0 Mar 20 03:53 ..
-rw-r--r--    1 root     root          5633 Mar 20 03:55 01.pem
-rw-r--r--    1 root     root          5516 Mar 20 03:55 02.pem
-rw-r--r--    1 root     root          1818 Mar 20 03:54 ca.crt
-rw-------    1 root     root          1704 Mar 20 03:54 ca.key
-rw-r--r--    1 root     root           424 Mar 20 04:09 dh2048.pem
-rw-r--r--    1 root     root           304 Mar 20 03:55 index.txt
-rw-r--r--    1 root     root            21 Mar 20 03:55 index.txt.attr
-rw-r--r--    1 root     root            21 Mar 20 03:55 index.txt.attr.old
-rw-r--r--    1 root     root           152 Mar 20 03:55 index.txt.old
-rw-r--r--    1 root     root          5516 Mar 20 03:55 my-client.crt
-rw-r--r--    1 root     root          1102 Mar 20 03:55 my-client.csr
-rw-------    1 root     root          1704 Mar 20 03:55 my-client.key
-rw-r--r--    1 root     root          5633 Mar 20 03:55 my-server.crt
-rw-r--r--    1 root     root          1102 Mar 20 03:55 my-server.csr
-rw-------    1 root     root          1704 Mar 20 03:55 my-server.key
-rw-r--r--    1 root     root             3 Mar 20 03:55 serial
-rw-r--r--    1 root     root             3 Mar 20 03:55 serial.old
root@wr841n:/etc/easy-rsa# cat keys/serial
03
root@wr841n:/etc/easy-rsa# cat keys/index.txt
V	250316195514Z		01	unknown	/C=US/ST=CA/L=SanFrancisco/O=Fort-Funston/OU=MyOrganizationalUnit/CN=my-server/name=EasyRSA/emailAddress=me@myhost.mydomain
V	250316195537Z		02	unknown	/C=US/ST=CA/L=SanFrancisco/O=Fort-Funston/OU=MyOrganizationalUnit/CN=my-client/name=EasyRSA/emailAddress=me@myhost.mydomain
root@wr841n:/etc/easy-rsa# 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.2 在Linux Mint 17上面安裝openvpn套件（VPN客戶端）

參考資料

打開桌面環境裡的Synaptic套件管理員
把
network-manager-openvpn
network-manager-openvpn-gnome
這兩個套件裝上



＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.4 發布剛才產生的Certificates到服務器和客戶端的某個地方

這是在wr841n路由器裡，把Openvpn服務器需要的檔案複製到目錄/etc/openvpn/
root@wr841n:~# echo $KEY_DIR
/etc/easy-rsa/keys
root@wr841n:~# cd $KEY_DIR
root@wr841n:/etc/easy-rsa/keys# ls -al /etc/openvpn
drwxr-xr-x    2 root     root             3 Mar 20 01:59 .
drwxr-xr-x    1 root     root             0 Mar 20 03:49 ..
root@wr841n:/etc/easy-rsa/keys# cp ca.crt my-server.* dh*.pem  /etc/openvpn/
root@wr841n:/etc/easy-rsa/keys# ls -al /etc/openvpn
drwxr-xr-x    1 root     root             0 Mar 20 15:00 .
drwxr-xr-x    1 root     root             0 Mar 20 03:49 ..
-rw-r--r--    1 root     root          1818 Mar 20 15:00 ca.crt
-rw-r--r--    1 root     root           424 Mar 20 15:00 dh2048.pem
-rw-r--r--    1 root     root          5633 Mar 20 15:00 my-server.crt
-rw-r--r--    1 root     root          1102 Mar 20 15:00 my-server.csr
-rw-------    1 root     root          1704 Mar 20 15:00 my-server.key
root@wr841n:/etc/easy-rsa/keys# 

然後要把剛才產生的ca.crt和my-client開頭的所有檔案複製到Openvpn Client（筆記型電腦）上
還是在wr841n路由器裡
先把這些檔案複製到/tmp
root@wr841n:/etc/easy-rsa/keys# cp ca.crt my-client.* /tmp
root@wr841n:/etc/easy-rsa/keys# cd /tmp
root@wr841n:/tmp# ls -al|grep ca.crt
-rw-r--r--    1 root     root          1818 Mar 20 15:16 ca.crt
root@wr841n:/tmp# ls -al|grep my-client
-rw-r--r--    1 root     root          5516 Mar 20 15:16 my-client.crt
-rw-r--r--    1 root     root          1102 Mar 20 15:16 my-client.csr
-rw-------    1 root     root          1704 Mar 20 15:16 my-client.key
root@wr841n:/tmp# chown tonychacha:tonychacha my-client.key 

回到筆記型電腦上，用scp去複製
再放到/home/anntony/openvpn-client目錄裡面

anntony@anntony-Lenovo-B590 ~ $ cd /tmp
anntony@anntony-Lenovo-B590 /tmp $ scp wr841n:/tmp/ca.crt .
ca.crt                                                                                           100% 1818     1.8KB/s   00:00    
anntony@anntony-Lenovo-B590 /tmp $ scp wr841n:/tmp/my-client.* .
my-client.crt                                                                                    100% 5516     5.4KB/s   00:00    
my-client.csr                                                                                    100% 1102     1.1KB/s   00:00    
my-client.key                                                                                    100% 1704     1.7KB/s   00:00    
anntony@anntony-Lenovo-B590 /tmp $ mkdir -p /home/anntony/openvpn-client
anntony@anntony-Lenovo-B590 /tmp $ cp ca.crt /home/anntony/openvpn-client/
anntony@anntony-Lenovo-B590 /tmp $ cp my-client.* /home/anntony/openvpn-client/
anntony@anntony-Lenovo-B590 /tmp $ chown -R anntony:anntony /home/anntony/openvpn-client/
anntony@anntony-Lenovo-B590 /tmp $ cd /home/anntony/openvpn-client/
anntony@anntony-Lenovo-B590 ~/openvpn-client $ ls -al
總計 28
drwxr-xr-x  2 anntony anntony 4096  3月 20 15:49 .
drwxr-xr-x 75 anntony anntony 4096  3月 20 15:49 ..
-rw-r--r--  1 anntony anntony 1818  3月 20 15:49 ca.crt
-rw-r--r--  1 anntony anntony 5516  3月 20 15:49 my-client.crt
-rw-r--r--  1 anntony anntony 1102  3月 20 15:49 my-client.csr
-rw-------  1 anntony anntony 1704  3月 20 15:49 my-client.key
anntony@anntony-Lenovo-B590 ~/openvpn-client $ 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.5 設定網路環境
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.3.1.5.1 服務器的網路設定

建立vpn接口tun0
root@wr841n:~# uci set network.vpn0=interface
root@wr841n:~# uci set network.vpn0.ifname=tun0
root@wr841n:~# uci set network.vpn0.proto=none
root@wr841n:~# uci commit network
root@wr841n:~# /etc/init.d/network reload

防火牆配置
root@wr841n:~# uci add firewall  rule
cfg1892bd
root@wr841n:~# uci set firewall.@rule[-1].name=Allow-OpenVPN-Inbound
root@wr841n:~# uci set firewall.@rule[-1].target=ACCEPT
root@wr841n:~# uci set firewall.@rule[-1].src=*
root@wr841n:~# uci set firewall.@rule[-1].proto=udp
root@wr841n:~# uci set firewall.@rule[-1].dest_port=1194
root@wr841n:~# 
root@wr841n:~# 
root@wr841n:~# uci add firewall  zone
cfg19dc81
root@wr841n:~# uci set firewall.@zone[-1].name=vpn
root@wr841n:~# uci set firewall.@zone[-1].input=ACCEPT
root@wr841n:~# uci set firewall.@zone[-1].forward=ACCEPT
root@wr841n:~# uci set firewall.@zone[-1].output=ACCEPT
root@wr841n:~# uci set firewall.@zone[-1].network=vpn0
root@wr841n:~# uci commit firewall
root@wr841n:~# /etc/init.d/firewall reload
Warning: Unable to locate ipset utility, disabling ipset support
 * Clearing IPv4 filter table
 * Clearing IPv4 nat table
 * Clearing IPv4 mangle table
 * Clearing IPv4 raw table
 * Populating IPv4 filter table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
Warning: fw3_ipt_rule_append(): Can't find target 'input_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'output_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'forwarding_vpn_rule'
   * Rule 'Allow-DHCP-Renew'
   * Rule 'Allow-Ping'
   * Rule 'Allow-OpenVPN-Inbound'
   * Redirect 'Forward36000'
   * Forward 'lan' -> 'wan'
 * Populating IPv4 nat table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
Warning: fw3_ipt_rule_append(): Can't find target 'prerouting_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'postrouting_vpn_rule'
   * Redirect 'Forward36000'
 * Populating IPv4 mangle table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Populating IPv4 raw table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Clearing IPv6 filter table
 * Clearing IPv6 mangle table
 * Clearing IPv6 raw table
 * Populating IPv6 filter table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
Warning: fw3_ipt_rule_append(): Can't find target 'input_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'output_vpn_rule'
Warning: fw3_ipt_rule_append(): Can't find target 'forwarding_vpn_rule'
   * Rule 'Allow-DHCPv6'
   * Rule 'Allow-ICMPv6-Input'
   * Rule 'Allow-ICMPv6-Forward'
   * Rule 'Allow-OpenVPN-Inbound'
   * Forward 'lan' -> 'wan'
 * Populating IPv6 mangle table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Populating IPv6 raw table
   * Zone 'lan'
   * Zone 'wan'
   * Zone 'vpn'
 * Set tcp_ecn to off
 * Set tcp_syncookies to on
 * Set tcp_window_scaling to on
root@wr841n:~# 

然後我看了一下完成設定後
/etc/config/firewall多了什麼？

root@wr841n:~# cat /etc/config/firewall 

config defaults
	option syn_flood '1'
	option input 'ACCEPT'
	option output 'ACCEPT'
	option forward 'REJECT'

config zone
	option name 'lan'
	list network 'lan'
	option input 'ACCEPT'
	option output 'ACCEPT'
	option forward 'ACCEPT'

config zone
	option name 'wan'
	list network 'wan'
	list network 'wan6'
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option masq '1'
	option mtu_fix '1'

config forwarding
	option src 'lan'
	option dest 'wan'

config rule
	option name 'Allow-DHCP-Renew'
	option src 'wan'
	option proto 'udp'
	option dest_port '68'
	option target 'ACCEPT'
	option family 'ipv4'

config rule
	option name 'Allow-Ping'
	option src 'wan'
	option proto 'icmp'
	option icmp_type 'echo-request'
	option family 'ipv4'
	option target 'ACCEPT'

config rule
	option name 'Allow-DHCPv6'
	option src 'wan'
	option proto 'udp'
	option src_ip 'fe80::/10'
	option src_port '547'
	option dest_ip 'fe80::/10'
	option dest_port '546'
	option family 'ipv6'
	option target 'ACCEPT'

config rule
	option name 'Allow-ICMPv6-Input'
	option src 'wan'
	option proto 'icmp'
	list icmp_type 'echo-request'
	list icmp_type 'echo-reply'
	list icmp_type 'destination-unreachable'
	list icmp_type 'packet-too-big'
	list icmp_type 'time-exceeded'
	list icmp_type 'bad-header'
	list icmp_type 'unknown-header-type'
	list icmp_type 'router-solicitation'
	list icmp_type 'neighbour-solicitation'
	list icmp_type 'router-advertisement'
	list icmp_type 'neighbour-advertisement'
	option limit '1000/sec'
	option family 'ipv6'
	option target 'ACCEPT'

config rule
	option name 'Allow-ICMPv6-Forward'
	option src 'wan'
	option dest '*'
	option proto 'icmp'
	list icmp_type 'echo-request'
	list icmp_type 'echo-reply'
	list icmp_type 'destination-unreachable'
	list icmp_type 'packet-too-big'
	list icmp_type 'time-exceeded'
	list icmp_type 'bad-header'
	list icmp_type 'unknown-header-type'
	option limit '1000/sec'
	option family 'ipv6'
	option target 'ACCEPT'

config include
	option path '/etc/firewall.user'

config redirect
	option target 'DNAT'
	option src 'wan'
	option dest 'lan'
	option proto 'tcp'
	option src_dport '36000'
	option dest_ip '10.1.1.96'
	option dest_port '36000'
	option name 'Forward36000'

config rule
	option name 'Allow-OpenVPN-Inbound'
	option target 'ACCEPT'
	option src '*'
	option proto 'udp'
	option dest_port '1194'

config zone
	option name 'vpn'
	option input 'ACCEPT'
	option forward 'ACCEPT'
	option output 'ACCEPT'
	option network 'vpn0'

root@wr841n:~# 

最後，可以用這兩個指令
查看每個網路使用的接口名稱，和每個zone裡有那些網路？
root@wr841n:~# uci show network | grep ifname
network.loopback.ifname=lo
network.lan.ifname=eth1
network.wan.ifname=eth0
network.wan6.ifname=eth0
network.vpn0.ifname=tun0
root@wr841n:~# uci show firewall | grep zone | grep -E "(net|name)"
firewall.@zone[0].name=lan
firewall.@zone[0].network=lan
firewall.@zone[1].name=wan
firewall.@zone[1].network=wan wan6
firewall.@zone[2].name=vpn
firewall.@zone[2].network=vpn0
root@wr841n:~# 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊





＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
