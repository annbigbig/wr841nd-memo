10.3.2 掛載遠端檔案系統

參考資料
http://wiki.openwrt.org/doc/howto/nfs.client
https://help.ubuntu.com/community/SettingUpNFSHowTo#Portmap_Lockdown
http://www.cyberciti.biz/faq/centos-fedora-rhel-iptables-open-nfs-server-ports/
http://www.tldp.org/HOWTO/NFS-HOWTO/server.html

NFS Server：
安裝環境：Ubuntu Server Linaro 14.04 on cubieboard3
1.安裝nfs-kernel-server套件
2.建立要分享的/export/users目錄
3.設定/etc/exports設定檔
4.設定/etc/hosts.deny
5.設定/etc/hosts.allow
6.啟動NFS Server並確認服務狀態
7.確認每次開機都會自動啟動NFS Server
8.調整Firewall規則放行NFS Client

NFS Client：
安裝環境：OpenWRT trunk 44893 on wr841n router
9.NFS Client端掛載指令
10.我的OpenWRT trunk 44893固件忘了編譯進去的東西

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
1.安裝nfs-kernel-server套件

套新套件源
# apt-get update

查看系統有沒有已安裝了nfs-kernel-server套件？
# dpkg -l | grep nfs-kernel-server

安裝套件
# apt-get install nfs-kernel-server

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
2.建立要分享的/export/users目錄

root@cubietruck:~# mkdir -p /export/users
root@cubietruck:~# chown -R root:root /export
root@cubietruck:~# chmod -R 777 /export
root@cubietruck:~# ls -al /export
total 12
drwxrwxrwx  3 root root 4096 Mar 27 22:56 .
drwxr-xr-x 22 root root 4096 Mar 27 22:56 ..
drwxrwxrwx  2 root root 4096 Mar 27 22:56 users
root@cubietruck:~#

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
3.設定/etc/exports設定檔

就這兩行而已
/export       10.1.1.0/24(rw,fsid=0,insecure,no_subtree_check,async)
/export/users 10.1.1.0/24(rw,nohide,insecure,no_subtree_check,async)

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
4.設定/etc/hosts.deny

把這一行加到/etc/hosts.deny檔案的最後面
rpcbind mountd nfsd statd lockd rquotad : ALL

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
5.設定/etc/hosts.allow
把這一行加到/etc/hosts.allow檔案的最後面
rpcbind mountd nfsd statd lockd rquotad : 127.0.0.1, 10.1.1.0/255.255.255.0

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
6.啟動NFS Server並確認服務狀態

# /etc/init.d/nfs-kernel-server start
# ps aux |grep nfs
# netstat -anp|grep 2049
# netstat -anp|grep 111

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
7.確認每次開機都會自動啟動NFS Server

安裝sysv-rc-conf套件
# apt-get install sysv-rc-conf

執行它
# sysv-rc-conf

在文字設定介面裡面
確定「nfs-kernel-server」和「rpcbind」
在RunLevel 2345都有被選取
按下Space鍵選取，選好之後就按q離開
這個動作會在
/etc/rc2.d
/etc/rc3.d
/etc/rc4.d
/etc/rc5.d
這些目錄裡面，作Symbolic Link

像這樣
root@cubietruck:/etc/rc3.d# ls -al
total 12
drwxr-xr-x  2 root root 4096 Mar 27 23:36 .
drwxrwxr-x 89 root root 4096 Mar 27 23:28 ..
-rw-r--r--  1 root root  677 Mar 13  2014 README
lrwxrwxrwx  1 root root   17 Jan 14 16:55 S20hostapd -> ../init.d/hostapd
lrwxrwxrwx  1 root root   27 Mar 27 22:51 S20nfs-kernel-server -> ../init.d/nfs-kernel-server
lrwxrwxrwx  1 root root   17 Mar 27 23:36 S20rpcbind -> ../init.d/rpcbind
lrwxrwxrwx  1 root root   15 Oct 24 15:49 S20rsync -> ../init.d/rsync
lrwxrwxrwx  1 root root   23 Mar 14 23:26 S20smartmontools -> ../init.d/smartmontools
lrwxrwxrwx  1 root root   19 Oct 24 15:50 S70dns-clean -> ../init.d/dns-clean
lrwxrwxrwx  1 root root   18 Oct 24 15:49 S70pppd-dns -> ../init.d/pppd-dns
lrwxrwxrwx  1 root root   18 Oct 24 15:42 S99ondemand -> ../init.d/ondemand
lrwxrwxrwx  1 root root   18 Oct 24 15:42 S99rc.local -> ../init.d/rc.local
root@cubietruck:/etc/rc3.d# 

S開頭的Symbolic Link指到的服務，在開機的時候都會自動啟動
後面的數字是啟動的順序
S20開頭的rpcbind會優先啟動於S99的rc.local

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
8.調整Firewall規則放行NFS Client

請先看到Rehdat的這一篇
https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/s2-nfs-nfs-firewall-config.html

直接捲到那一頁裡關於防火牆的重點
Procedure 9.1. Configure a firewall to allow NFS

Allow TCP and UDP port 2049 for NFS.
Allow TCP and UDP port 111 (rpcbind/sunrpc).
Allow the TCP and UDP port specified with MOUNTD_PORT="port"
Allow the TCP and UDP port specified with STATD_PORT="port"
Allow the TCP port specified with LOCKD_TCPPORT="port"
Allow the UDP port specified with LOCKD_UDPPORT="port"

所以我知道除了TCP與UDP端口的111和2049
還有別的端口也要開放
可是因為我有點火燒屁股，沒時間去仔細研究那麼細的細節了
所以我決定
乾脆直接認wr841n路由器的內網subnet
10.1.1.0/24
只要是這個網段來的全都放行啦（混，好孩子不要學）

以下直接列出我的Cubieboard3機器上的完整/root/firewall.sh
如下

#!/bin/bash
# ============ Set your network parameters here ===================================================
iptables=/sbin/iptables
loopback=127.0.0.1
#local=192.168.0.161
#lan=192.168.0.0/24
local=10.1.1.96
lan=10.1.1.0/24
vpn=10.8.0.0/24
# =================================================================================================
$iptables -t filter -F
$iptables -t filter -A INPUT -i lo -s $loopback -d $loopback -p all -j ACCEPT
$iptables -t filter -A INPUT -i eth0 -s $local -d $local -p all -j ACCEPT
$iptables -t filter -A INPUT -i eth0 -s $lan -d $local -p all -j ACCEPT
$iptables -t filter -A INPUT -d $local -p tcp --dport 36000 --syn -m state --state NEW -j ACCEPT
$iptables -t filter -A INPUT -d $local -p tcp --dport 80 --syn -m state --state NEW -m limit --limit 10/s --limit-burst 40 -j ACCEPT
$iptables -t filter -A INPUT -d $local -p tcp --dport 80 --syn -m state --state NEW -j DROP
#$iptables -t filter -A INPUT -d $local -p tcp --dport 443 --syn -m state --state NEW -m limit --limit 10/s --limit-burst 40 -j ACCEPT
#$iptables -t filter -A INPUT -d $local -p tcp --dport 443 --syn -m state --state NEW -j DROP
$iptables -t filter -A INPUT -p icmp --icmp-type 8 -m recent --name icmp_db --update --second 60 --hitcount 6 -j DROP
$iptables -t filter -A INPUT -p icmp --icmp-type 8 -m recent --set --name icmp_db
$iptables -t filter -A INPUT -s $lan -d $local -p icmp -j ACCEPT
$iptables -t filter -A INPUT -s $vpn -d $local -p icmp -j ACCEPT
$iptables -t filter -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$iptables -t filter -P INPUT DROP
$iptables -t filter -L -n --line-number
# =================================================================================================

如果測試完或是沒在用NFS Server的時候
記得把那行放行10.1.1.0/24網段的規則拿掉，比較安全

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
9.NFS Client端掛載指令

現在來到wr841n路由器
首先建立掛載點/mnt/nfs-share空目錄
root@wr841n:~# mkdir -p /mnt/nfs-share

看看我們現在的OpenWRT固件上有什麼套件是和NFS Client有關的？
root@wr841n:~# opkg list-installed | grep nfs
kmod-fs-nfs - 3.18.9-1
kmod-fs-nfs-common - 3.18.9-1
root@wr841n:~#

然後請看到OpenWRT官網關於NFS Client的這一頁
http://wiki.openwrt.org/doc/howto/nfs.client

最前面寫著需要nfs-utils這個套件
才能掛載nfs4的分割區
Description: Updated mount.nfs command - allows mounting nfs4 volumes

所以我現在的固件沒有把這個nfs-utils編譯進來
那麼我到底可不可以掛載剛才NFS-Server分享出來的/export目錄呢？
實驗一下之後，下面這裡是「失敗的」mount指令

你以為剛才NFS Server分享出來的/export可以用10.1.1.96:/來掛上，錯
root@wr841n:~# mount -t nfs 10.1.1.96:/ /mnt/nfs-share
mount: mounting 10.1.1.96:/ on /mnt/nfs-share failed: Permission denied

那麼加了-o nolock可以掛嗎？不行
root@wr841n:~# mount -t nfs 10.1.1.96:/ /mnt/nfs-share -o nolock
mount: mounting 10.1.1.96:/ on /mnt/nfs-share failed: Permission denied

我指定nfsvers=4可以掛嗎？還是不行
root@wr841n:~# mount -t nfs 10.1.1.96:/export /mnt/nfs-share -o nfsvers=4 -o nolock
mount: mounting 10.1.1.96:/export on /mnt/nfs-share failed: Protocol not supported

上面三個指令都是「失敗的」
接下來的兩個指令才可以順利掛載
# mount -t nfs 10.1.1.96:/export /mnt/nfs-share -o nolock
或是
# mount -t nfs 10.1.1.96:/export /mnt/nfs-share -o nfsvers=3 -o nolock
都可以，上面兩行的效力是相同的

掛上了之後，可以df -h看看
root@wr841n:~# df -h
Filesystem                Size      Used Available Use% Mounted on
rootfs                   10.8M    796.0K     10.0M   7% /
/dev/root                 4.0M      4.0M         0 100% /rom
tmpfs                    29.9M    744.0K     29.1M   2% /tmp
/dev/mtdblock3           10.8M    796.0K     10.0M   7% /overlay
overlayfs:/overlay       10.8M    796.0K     10.0M   7% /
tmpfs                   512.0K         0    512.0K   0% /dev
10.1.1.96:/export        14.4G    813.5M     13.0G   6% /mnt/nfs-share
root@wr841n:~# 

剛才NFS Server分享出來的/export目錄
已經被掛在wr841n路由器的/mnt/nfs-share目錄上了
進去/mnt/nfs-share目錄裡面，寫些東西進去試試
root@wr841n:~# cd /mnt/nfs-share
root@wr841n:/mnt/nfs-share# ls
users
root@wr841n:/mnt/nfs-share# cd users/
root@wr841n:/mnt/nfs-share/users# ls
root@wr841n:/mnt/nfs-share/users# echo "Pi Ca Chu ~~~" > testfile.txt
root@wr841n:/mnt/nfs-share/users# dd if=/dev/zero of=./zerofile.img bs=1M count=16
16+0 records in
16+0 records out
root@wr841n:/mnt/nfs-share/users# ls -al
drwxrwxrwx    2 root     root          4096 Mar 29 00:16 .
drwxrwxrwx    3 root     root          4096 Mar 27 22:56 ..
-rw-rw-rw-    1 nobody   nogroup         14 Mar 29 00:15 testfile.txt
-rw-rw-rw-    1 nobody   nogroup   16777216 Mar 29 00:16 zerofile.img
root@wr841n:/mnt/nfs-share/users# cat ./testfile.txt 
Pi Ca Chu ~~~
root@wr841n:/mnt/nfs-share/users# 

可以，讀寫都很正常
沒有再用到這個NFS partition的時候
記得要缷載它
缷載指令如下
root@wr841n:/mnt/nfs-share/users# cd ~
root@wr841n:~# pwd
/root
root@wr841n:~# sync
root@wr841n:~# umount /mnt/nfs-share
root@wr841n:~# df -h
Filesystem                Size      Used Available Use% Mounted on
rootfs                   10.8M    796.0K     10.0M   7% /
/dev/root                 4.0M      4.0M         0 100% /rom
tmpfs                    29.9M    744.0K     29.1M   2% /tmp
/dev/mtdblock3           10.8M    796.0K     10.0M   7% /overlay
overlayfs:/overlay       10.8M    796.0K     10.0M   7% /
tmpfs                   512.0K         0    512.0K   0% /dev
root@wr841n:~#

這樣子就確認已經缷載掉了
如果忘記缷載它，就把NFS Server給關機了
再操作wr841n終端機時，會咬住wr841n路由器的終端機
到時候只能把wr841n給重新開機（指令reboot）才能恢復正常

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.我的OpenWRT trunk 44893固件忘了編譯進去的東西

參考資料
http://postwarrior.com/nfs-support-on-openwrt/

我用來編譯OpenWRT固件的筆記型電腦上，執行
anntony@anntony-Lenovo-B590 ~ $ pwd
/home/anntony
anntony@anntony-Lenovo-B590 ~ $ cd openwrt/trunk
anntony@anntony-Lenovo-B590 ~/openwrt/trunk $ make menuconfig

進入 .config - OpenWrt Configuration設定畫面之後

有編譯進去的
> Kernel modules > Filesystems > kmod-fs-nfs
> Kernel modules > Filesystems > kmod-fs-nfs-common


沒有編譯進去的（下次記得補上，不然只能用-o nfsvers=3來掛載）
> Base system > busybox > Linux System Utilities > mount (NEW) > Support mounting NFS file systems on Linux < 2.6.23
> Utilities > Filesystem >  nfs-utils

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
